<div style = "background-image: url('/images/testing.jpg'); height: 100%;">      

<!--add hamburger menu for scrollspy here-->
  <div id="index-banner" class="parallax-container">

    <ul id="slide-out" class="black sidenav white-text exoFont flow-text">
      <li>
        <div class="user-view">
          <div class="background"></div>
        <div class="nav-item active">
          <a class="nav-link sidenav-close" href="/">Home <span class="sr-only">(current)</span></a>
        </div>
        {{#if loggedIn}}
        <div class= "nav-item">
          <a href="/user" class="sidenav-close nav-link white-text exoFont flow-text">Your Profile</a>
        </div>
        <br>
        <a href="/logout" class="sidenav-close nav-link white-text exoFont flow-text">Log Out</a>
        {{else}}
        <a href="/login" class="sidenav-close nav-link white-text exoFont flow-text">Log In</a>
        {{/if}}
        </div>
      </li>    
      <li>
        <div class="divider white-text exoFont flow-text"></div>
      </li>
    </ul>
      <a href="#" data-target="slide-out" class="sidenav-trigger"><i class="fa fa-bars fa-4x burger-menu material-icons white-text exoFont flow-text"></i></a>

    <div class="section section1 no-pad-bot">
      <div class="container">  
        
      <br><br>
      <div class= "container">
        <h1 class="center white-text">Star Scout</h1>
      </div>
        <div id="home">
          <div class="container flow-text exoFont">
            <div class="section">
              <div class="row">
                <h3 class="center">Dark Sky Map</h3>
                <div id="map-canvas"></div>
                <div class="center" style="margin-top: 10px;">
                  <img src='/images/lightlegend.jpg'>
                </div>

                <div class="col s12 center flow-text exoFont">
                  <div class="card eventsCard horizontal">
                    <div class = "card-stacked">
                      <div class="card-content">
                      <h5 class="card-title" id='event-name'>{{resultMeteor.shower_name}}</h5>
                          <p id='latlon'></p>
                          <p id='start-date'>Start Date: {{resultMeteor.begin_date}}</p>
                          <p id='end-date'>End Date: {{resultMeteor.end_date}}</p>
                          <p id='max-date'>Maximum Date: {{resultMeteor.max_date}}</p>
                          <p id='max-rate'>Peak Meteors Per Hour: {{resultMeteor.max_rate_per_hour}}</p>
                          <p id='summary'></p>
                          <p id='temp'></p>
                          <p id='sunrise'></p>
                          <p id='sunset'></p>
                      </div>

                      <div class="row flow-text exoFont form-group form-inline" id="searchlocation"><span id="error"></span>
                          <input type="text" class="form-control" placeholder="Search by Zip" id="location">
                          <button id="searchlocation" class="btn btn-primary">Search</button>
                      </div>  

                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>  
      </div> 
    </div>  
  </div> 

  <script>

// Geo Locate
let lat, lon;
if ('geolocation' in navigator) {
  // console.log('geolocation available');
  navigator.geolocation.getCurrentPosition(async position => {
    let lat, lon, weather, forecast;
    try {
      lat = position.coords.latitude;
      lon = position.coords.longitude;
      document.getElementById('latlon').textContent = `latitude: ${lat}, longitude: ${lon}`;
      const api_url_camp = `/campgrounds/${lat},${lon}`
      const response_camp = await fetch(api_url_camp);
      const json_camp = await response_camp.json();
      let campgroundArray = new Array();
      for (let camp of json_camp) {
        let campgroundTemp = new Array();
        let campgroundName = camp.$.facilityName;
        let campgroundLat = camp.$.latitude;
        let campgroundLon = camp.$.longitude;
        let campgroundType = camp.$.contractType;
        let campgroundZ = 3;
        campgroundTemp.push(campgroundName)
        campgroundTemp.push(campgroundLat)
        campgroundTemp.push(campgroundLon)
        campgroundTemp.push(campgroundZ);
        campgroundTemp.push(campgroundType);
        campgroundArray.push(campgroundTemp);
      }
      setMarkers(map, campgroundArray);
      const api_url = `/weather/${lat},${lon}`;
      const response = await fetch(api_url);
      const json = await response.json();
      forecast = json.weather.daily;
      weather = json.weather.currently;
      document.getElementById('summary').textContent = `Weather Summary: ${weather.summary}`;
      document.getElementById('temp').textContent = `Temperature: ${weather.temperature}`;
      //document.getElementById('forecast').textContent = forecast.data[0].summary;
      document.getElementById('sunrise').textContent = `Sunrise: ${forecast.data[0].sunriseTime}`;
      document.getElementById('sunset').textContent = `Sunset: ${forecast.data[0].sunsetTime}`;
      //document.getElementById('moonphase').textContent = forecast.data[0].moonPhase;

    } catch (error) {
      console.log(error);
    }

    const data = { lat, lon, weather, forecast };
    const options = {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)
    };
    const db_response = await fetch('/api', options);
    const db_json = await db_response.json();
    console.log(db_json);
  });
} else {
  console.log('geolocation not available');
}
</script>

<script src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
<script src="/js/materialize.js"></script>
<script src="/js/init.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="/js/index.js"></script>

<script>
 $(document).ready(function(){
      $('#searchlocation').click(function() {
      var location = $("#location").val();
      if (location != '') {
        $.ajax ({
          url: 'https://api.openweathermap.org/data/2.5/weather?zip=' + location + "&units=imperial" + "&APPID=560a44dd3a91049359b3ff212530bb7f",
          type: "GET",
          datatype: "jsonp",
          success: function(data) {
            console.log(data.coord.lat);
            newMarkerAndCenter(map, data.coord.lat, data.coord.lon);
          }
        });
      } else {
        //{{!-- $("#error").html("Derp, field cannot be empty. "); --}}
        console.log("must type something");
      }
    });
  });
</script>

